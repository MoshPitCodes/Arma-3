enableDebugConsole = 2;
respawn = 3;
respawnDelay = 5;
respawnOnStart = -1;
allowFunctionsLog = 0;

respawnTemplates[] = {"MenuPosition", "MenuInventory", "Tickets", "Spectator"};

class Header {
	gameType = Escape;
	minPlayers = 1;
	maxPlayers = 12;
};

dev = "NNS";
briefingName = $STR_NNS_mission_name;
author = "NNS";
overviewText = $STR_NNS_mission_briefing_overview;
overviewTextLocked = $STR_NNS_mission_briefing_overview;
onLoadName = $STR_NNS_mission_name;
onLoadMission = $STR_NNS_mission_briefing_overview;
disabledAI = 0;

class CfgRoles {
	class Saved_Loadout {
		displayName = $STR_NNS_loadout_previous;
		icon = "a3\missions_f_exp\data\img\lobby\ui_campaign_lobby_icon_player_connecting_ca.paa";
	};
};

class CfgRespawnInventory {
	class O_Saved_Loadout {
		show = "true";
		displayName = $STR_NNS_loadout_restore;
		role = "Saved_Loadout";
		icon = "\A3\ui_f\data\map\VehicleIcons\iconManLeader_ca.paa";
		uniformClass = "U_C_Poloshirt_stripped";
		weapons[] = {};
		magazines[] = {};
		linkedItems[] = {};
		items[] = {};
	};
};

class Params {
	class Loadouts { //from BIS
		title = $STR_A3_Escape_param_respawnLoadouts;
		values[] = {0, 1, 2, 3};
		texts[] = {$STR_NNS_param_respawnLoadouts_overequip, $STR_A3_Escape_param_respawnLoadouts01, $STR_A3_Escape_param_respawnLoadouts02, $STR_A3_Escape_param_respawnLoadouts03};
		default = 0; //NNS
		file = "params\respawnLoadouts.sqf";
	};

	class EnemyEquipment { //from BIS
		title = $STR_A3_Escape_param_enemyEquipment;
		values[] = {0, 1};
		texts[] = {$STR_A3_Escape_param_enemyEquipment01, $STR_A3_Escape_param_enemyEquipment02};
		default = 0; //NNS
		file = "params\enemyEquipment.sqf";
	};

	class noOfRespawns { //from BIS
		title = $STR_A3_rscdisplaydebriefing_loadstext_mp;
		values[] = {-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
		texts[] = {$STR_NNS_param_unlimited, "0", $STR_A3_Escape_param_respawnGroup10, $STR_A3_Escape_param_respawnGroup20, $STR_A3_Escape_param_respawnGroup30, $STR_A3_Escape_param_respawnGroup40, $STR_A3_Escape_param_respawnGroup50, $STR_A3_Escape_param_respawnGroup100, $STR_A3_Escape_param_respawnIndividual01, $STR_A3_Escape_param_respawnIndividual02, $STR_A3_Escape_param_respawnIndividual03, $STR_A3_Escape_param_respawnIndividual04, $STR_A3_Escape_param_respawnIndividual05, $STR_A3_Escape_param_respawnIndividual10};
		default = -1; //NNS
		file = "params\setRespawn.sqf";
	};
	
	class Fog { //from BIS
		title = $STR_A3_Param_Fog_Title;
		values[] = {0,1,3,4}; //NNS: add more
		texts[] = {$STR_A3_Param_Fog_0, $STR_A3_Param_Fog_1, $STR_A3_Param_Fog_2, $STR_A3_Param_Fog_3}; //NNS: add more
		default = 0;
		file = "params\setFog.sqf";
	};
	
	class DebugOutputs {
		title = $STR_NNS_param_DebugOutputs_title;
		values[] = {0,1,2,3};
		texts[] = {$STR_NNS_param_disable,$STR_NNS_param_DebugOutputs_chatbox,$STR_NNS_param_DebugOutputs_logs,$STR_NNS_param_DebugOutputs_both};
		default = 2;
		file = "params\setDebugOutputs.sqf";
	};
	
	class DebugMenu {
		title = $STR_NNS_param_DebugMenu_title;
		values[] = {0,1,2};
		texts[] = {$STR_NNS_param_disable,$STR_NNS_param_DebugMenu_admin,$STR_NNS_param_DebugMenu_all};
		default = 2;
		file = "params\setDebugMenu.sqf";
	};
	
	class EnemyCountsMenu {
		title = $STR_NNS_param_EnemyCountsMenu_title;
		values[] = {0,1};
		texts[] = {$STR_NNS_param_normal,$STR_NNS_param_EnemyCountsMenu_limited};
		default = 1;
		file = "params\setEnemyCountsMenu.sqf";
	};
	
	class EscapeRulesMenu {
		title = $STR_NNS_param_EscapeRulesMenu_title;
		values[] = {0,1};
		texts[] = {$STR_NNS_param_EscapeRulesMenu_original,$STR_NNS_param_EscapeRulesMenu_permissive};
		default = 1;
		file = "params\setEscapeRules.sqf";
	};
	
	class EscapeAIskillMenu {
		title = $STR_NNS_param_EscapeAIskillMenu_title;
		values[] = {0,1,2};
		texts[] = {$STR_NNS_param_EscapeAIskillMenu_novice,$STR_NNS_param_EscapeAIskillMenu_normal,$STR_NNS_param_EscapeAIskillMenu_expert};
		default = 1;
		file = "params\setAIskill.sqf";
	};
	
	class AmmoboxAmountMenu {
		title = $STR_NNS_param_AmmoboxAmount_title;
		values[] = {0,1,2,3};
		texts[] = {$STR_NNS_param_AmmoboxAmount_verylow,$STR_NNS_param_AmmoboxAmount_low,$STR_NNS_param_AmmoboxAmount_normal,$STR_NNS_param_AmmoboxAmount_high};
		default = 0;
		file = "params\setAmmoboxAmount.sqf";
	};
	
	class StaminaMenu {
		title = $STR_NNS_param_Stamina_title;
		values[] = {0,1};
		texts[] = {$STR_NNS_param_disable,$STR_NNS_param_enable};
		default = 0;
		file = "params\setStamina.sqf";
	};
	
	class TKpunishMenu {
		title = $STR_NNS_param_PunishTK_title;
		values[] = {0,1};
		texts[] = {$STR_NNS_param_disable,$STR_NNS_param_enable};
		default = 1;
		file = "params\setTKpunish.sqf";
	};
	
	class InvincibilityMenu {
		title = $STR_NNS_param_Invincibility_title;
		values[] = {0,1};
		texts[] = {$STR_NNS_param_disable,$STR_NNS_param_enable};
		default = 1;
		file = "params\setInvincibility.sqf";
	};
	
	
	
	
	#define DAYTIMEHOUR_DEFAULT				16
	#define WEATHER_DEFAULT						0
	#define DEBUGCONSOLE_DEFAULT			1
	#define TIMEACCELERATION_DEFAULT	1

	#define VIEW_DISTANCE_MIN					1000
	#define VIEW_DISTANCE_MAX					3500
	#define VIEW_DISTANCE_DEFAULT   	2000

	#include "\a3\functions_f\Params\paramDaytimeHour.inc"
	#include "\a3\functions_f\Params\paramWeather.inc"
	#include "\a3\functions_f\Params\paramDebugConsole.inc"
	#include "\a3\Functions_F_MP_Mark\Params\paramTimeAcceleration.inc"
	#include "\a3\Functions_F_Heli\Params\paramViewDistance.inc"
	#include "\a3\functions_f\params\paramRevive.inc"
};

class CfgDebriefing {
	class success {
		title = $STR_A3_mission_completed_title;
		description = $STR_NNS_End_Win_desc;
		subtitle = $STR_NNS_End_Win_sub;
	};
	class end1 {
		title = $STR_A3_mission_failed_title;
		description = $STR_NNS_End_End1_desc;
		subtitle = $STR_NNS_End_End1_sub;
	};
	class end2 {
		title = $STR_A3_mission_failed_title;
		description = $STR_NNS_End_End2_desc;
		subtitle = $STR_NNS_End_End2_sub;
	};
};

class CfgDebriefingSections {
	class Stats {
		title = $STR_NNS_Debrif_Stats_title;
		variable = "BIS_GlobalStats";
	};
};

corpseManagerMode = 1; 		// Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
corpseLimit = 24; 		// Max number of bodies which can be available at the same time. When exceeded, start deleting immediately.
corpseRemovalMinTime = 300; 	// Minimal time in seconds a body stays in the scene (can't be removed sooner).
corpseRemovalMaxTime = 360; 	// Maximal time in seconds after which a dead body is removed (can't stay longer).

wreckManagerMode = 1; 		// Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
wreckLimit = 8; 		// Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately.
wreckRemovalMinTime = 300; 	// Minimal time in seconds a wreck stays in the scene (can't be removed sooner).
wreckRemovalMaxTime = 360;	// Maximal time in seconds after which a wreck is removed (can't stay longer).

minPlayerDistance = 100;		// Bodies and wrecks in this vicinity of players will not be deleted even if the timer/limit condition is met.

class CfgFunctions {
	class NNS {
		class Sandbox {
			class preInit {file = "preInit.sqf"; preInit = 1;};
			
			file = "nns_functions";
			//debug
			class debugOutput {};
			class serverFPS {};
			
			//general
			class CompileDebriefingStats {};
			class MapDrawLine {};
			class StringCapitalize {};
			
			//ambiance
			class LampFlickering {};
			class spawnBigFire {};
			class spawnFlare {};
			
			//unit/AI
			class FoundNearestEnemy {};
			class unstuckAI {};
			class groupCenter {};
			class AIskill {};
			
			//vehicle
			class randomVehicleDamage {};
			class setAllHitPointsDamage {};
			class spawnVehicleOnRoad {};
			class spawnVehicleOnRoad_Adv {}; //too overkill for this mission
			class spawnCivVehi {};
			class vehicleLightOnOff {};
			class AmmoboxLimiter {};
			
			//building
			class populateBagBunkerTower_Csat {};
			class populateBagBunkerTower_Nato {};
			class populateCargoHQ_Csat {};
			class populateCargoHQ_Nato {};
			class populatePost_Csat {};
			class populatePost_Nato {};
			class populateTower_Csat {};
			class populateTower_Nato {};
			class CargoTower_Equipments {};
			class CargoHQ_Equipments {};
			class CleanBuilding {};
			
			//zone
			class destroyZone {};
			
		};
	};
};

class CfgCommunicationMenu { //custom menu definition
	class Debug_Menu {
		text = "Debug Menu";		// Text displayed in the menu and in a notification
		submenu = "#USER:MENU_COMMS_DEBUG";					// Submenu opened upon activation (expression is ignored when submenu is not empty.)
		expression = "";	// Code executed upon activation
		icon = "img\debug_icon.paa";				// Icon displayed permanently next to the command menu
		enable = "1";					// Simple expression condition for enabling the item
		removeAfterExpressionCall = 0;	// 1 to remove the item after calling
	};
};

class CfgSounds { //custom sound definition
	sounds[] = {};
	class LightFlicker01 {name = "lightflicker01"; sound[] = {"audio\lightflicker01.ogg", 0.9, 1, 75}; titles[]	= {};};
	class LightFlicker02 {name = "lightflicker02"; sound[] = {"audio\lightflicker02.ogg", 0.9, 1, 75}; titles[]	= {};};
	class LightFlicker03 {name = "lightflicker03"; sound[] = {"audio\lightflicker03.ogg", 0.9, 1, 75}; titles[]	= {};};
};

class CfgSFX {
	class BigFire01 {sound0[] = {"@A3\Sounds_F\sfx\fire1_loop", 8, 1.0, 250, 1, 0, 0, 0}; sounds[] = {sound0}; empty[] = {"", 0, 0, 0, 0, 0, 0, 0};};
	class BigFire02 {sound0[] = {"@A3\Sounds_F\sfx\fire2_loop", 8, 1.0, 250, 1, 0, 0, 0}; sounds[] = {sound0}; empty[] = {"", 0, 0, 0, 0, 0, 0, 0};};
	class CarAlarm01 {sound0[] = {"@A3\Sounds_F_Orange\MissionSFX\Orange_Car_Alarm_Loop_01", 1.4, 1.0, 350, 1, 0, 0, 0}; sounds[] = {sound0}; empty[] = {"", 0, 0, 0, 0, 0, 0, 0};};
};

class CfgVehicles {
	class BigFireSound01 {sound = "BigFire01";};
	class BigFireSound02 {sound = "BigFire02";};
	class CarAlarmSound01 {sound = "CarAlarm01";};
};

